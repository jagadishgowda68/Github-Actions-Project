name: CICD Pipeline

on:
#  push:
#    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  compile:

    #runs-on: ubuntu-latest
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile
  
  security-check:
    runs-on: self-hosted
    needs: compile

    steps:
    - uses: actions/checkout@v4
    - name: Trivy Installation
      run: |
        # Retry apt-get update
        until sudo apt-get update; do
          echo "Waiting for apt lock..."
          sleep 5
        done

        # Retry installing dependencies
        until sudo apt-get install -y wget apt-transport-https gnupg lsb-release; do
          echo "Retrying dependency install..."
          sleep 5
        done

        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list

        # Retry apt-get update again
        until sudo apt-get update; do
          echo "Retrying apt-get update after adding Trivy repo..."
          sleep 5
        done

        # Retry Trivy install
        until sudo apt-get install -y trivy; do
          echo "Retrying Trivy install..."
          sleep 5
        done

    - name: Trivy FS Scan
      run: trivy fs --format table -o fs-report.json .

    - name: gitleaks scan installation
      run: sudo apt -y install gitleaks
    - name: Gitleaks Code Scan
      run: gitleaks detect source . -r gitleaks-report.json -f json
    
  test:
    runs-on: self-hosted
    needs: security-check
      
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Unit Test Cases
      run: mvn test

  build_project_and_sonar_scan:
    runs-on: self-hosted
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build Project
      run: mvn package
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/*.jar
      
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.0.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        pollingTimeoutSec: 600
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}  

  

  
